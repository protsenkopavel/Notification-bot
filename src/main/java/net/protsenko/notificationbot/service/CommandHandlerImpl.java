package net.protsenko.notificationbot.service;

import lombok.AccessLevel;
import lombok.experimental.FieldDefaults;
import net.protsenko.notificationbot.bot.Bot;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.interfaces.BotApiObject;
import org.telegram.telegrambots.meta.api.methods.BotApiMethod;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;

import static net.protsenko.notificationbot.service.Commands.START;

@Service
@FieldDefaults(level = AccessLevel.PRIVATE, makeFinal = true)
public class CommandHandlerImpl implements Handler {
    @Override
    public BotApiMethod<?> answer(BotApiObject object, Bot bot) {
        var message = (Message) object;
        String command = message.getText();

        switch (command) {
            case "/start" -> {
                return start(message);
            }
            case "/help" -> {}

            case "/feedback" -> {}

            case "/notification" -> {}

            default -> {
                return defaultAnswer(message);
            }
        }


        return null;
    }

    private BotApiMethod<?> start(Message message) {
        return SendMessage.builder()
                .chatId(message.getChatId())
                .text("""
                        üëãüèª –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ –±–æ—Ç–µ-–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–µ, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π.
                       \s
                        üìç –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –¥–ª—è —Å–µ–±—è —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –∏ –±–æ—Ç –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è\s
                        –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.
                       \s""")
                .build();
    }

    private BotApiMethod<?> defaultAnswer(Message message) {
        return SendMessage.builder()
                .chatId(message.getChatId())
                .text("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∫–æ–º–∞–Ω–¥–∞")
                .build();
    }
}
